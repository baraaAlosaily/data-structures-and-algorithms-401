/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package hash.table;

public class App {
    public static void main(String[] args) {
//        HashTable<String> student=new HashTable<>(5);
//        student.Add(1,"baraa");
//        student.Add(13,"Mohammad");
//        student.Add(20,"Husain");
//        student.Add(17,"Israa");
//        student.Add(15,"Ghada");
//        student.Add(25,"Ghad");
//        student.Add(23, "mohammad");
//        System.out.println(student);
//        System.out.println(student.HashString("23"));
//        System.out.println(student.Contain(7));
//        System.out.println(student.Hash(25));
//        System.out.println(student.show());
        HashTable<String> collectWords=new HashTable<>(1);
        String sentence="It was a queer, sultry summer, the summer they electrocuted the Rosenbergs, and I didnâ€™t know what I was doing in New York...";
        collectWords.RepeatedWord(sentence);
        System.out.println(collectWords.RepeatedWord(sentence));

        tree<Integer> new1=new tree<>();
        new1.root=new Node<>(3);
        new1.root.rightChild=new Node<>(9);
        new1.root.leftChild=new Node<>(7);
        new1.root.rightChild.leftChild=new Node<>(4);
        new1.root.rightChild.rightChild=new Node<>(9);
//        System.out.println(new1.inOrder(new1.root));

        tree<Integer> new2=new tree<>();
        new2.root=new Node<>(10);
        new2.root.rightChild=new Node<>(15);
        new2.root.leftChild=new Node<>(27);
        new2.root.rightChild.leftChild=new Node<>(4);
        new2.root.rightChild.rightChild=new Node<>(9);

        HashTable<String> collectWords2=new HashTable<>(5);
        collectWords2.treeInsersection(new1,new2);
//        System.out.println(collectWords2.treeInsersection(new1,new2));

//        codeChallenge 33:

        JoinHashTableImp<String , String> table1 = new JoinHashTableImp<>();
        table1.add("first" , "Baraa");
        table1.add("second" , "Yayha");
        table1.add("third" , "Mohammad");

        JoinHashTableImp<String , String> table2 = new JoinHashTableImp<>();
        table2.add("first" , "new");
        table2.add("second" , "Student");
        table2.add("third" , "In School");

        Join join = new Join();
        System.out.println(join.leftJoinHashMaps(table1 , table2).toString());



    }
}
